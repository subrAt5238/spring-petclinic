pipeline {
    agent {label 'JDK-11-MVN-PIP-NPM' }
	parameters { 
	choice(name: 'BRANCH', choices: ['parameter', 'subrat', 'main'], description: 'select branch to build')
	string(name: 'GOAL', defaultValue: 'package', description: 'our Goal')
	}
	triggers{
	      pollSCM('* * * * *') 
	      cron('*/15 * * * *')
	}
	
    stages {
        stage ('source code  from git remote repository') {
            steps {	
		          mail subject: 'Build started', 
                  body: 'Build started', 
                  to: 'subratsenapati23@gmail.com'
                  git url: 'https://github.com/subrAt5238/spring-petclinic.git',
                  branch: "${params.BRANCH}"
            }
        }
        stage('To build maven package') {
            steps {
                sh "mvn ${params.GOAL}"
            }
        }
 post {
        always {
            echo 'Job completed'
            mail subject: 'Build Completed', 
                  body: 'Build Completed', 
                  to: 'subratsenapati23@gmail.com'
        }
        failure {
            mail subject: 'Build Failed', 
                  body: 'Build Failed', 
                  to: 'subratsenapati23@gmail.com' 
        }
		 success {
		         stage("archive artifact") {
            steps {
                archiveArtifacts artifacts: 'target/*.jar'
            }
        }
           stage("junit Reports") {
            steps {
                junit '**/surefire-reports/*.xml'
            }
	      }
	    }
      }
    }
  }
}
